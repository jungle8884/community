<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.turl.community.dao.MessageMapper">

    <select id="selectConversations" resultType="Message">
        SELECT id, from_id, to_id, conversation_id, content, status, create_time
        FROM message
        WHERE id IN (
            SELECT max(id) FROM message
            WHERE status != 2
            AND from_id != 1
            AND (from_id = #{userId} or to_id = #{userId})
            GROUP BY conversation_id
        )
        ORDER  BY id DESC
        limit #{offset}, #{limit}
    </select>
    <select id="selectConversationCount" resultType="int">
        SELECT COUNT(m.maxid) FROM (
            SELECT max(id) as maxid FROM message
            WHERE status != 2
            AND from_id != 1
            AND (from_id = #{userId} or to_id = #{userId})
            GROUP BY conversation_id
        ) as m
    </select>

    <select id="selectLetters" resultType="Message">
        SELECT id, from_id, to_id, conversation_id, content, status, create_time
        FROM message
        WHERE status != 2
        AND from_id != 1
        AND conversation_id = #{conversationId}
        ORDER by id DESC
        limit #{offset}, #{limit}
    </select>
    <select id="selectLetterCount" resultType="int">
        SELECT COUNT(id)
        FROM message
        WHERE status != 2
        AND from_id != 1
        AND conversation_id = #{conversationId}
    </select>
    <select id="selectLetterUnreadCount" resultType="int">
        SELECT COUNT(id)
        FROM message
        WHERE status = 0
        AND from_id != 1
        AND to_id = #{userId}
        <if test="conversationId!=null">
            AND conversation_id = #{conversationId}
        </if>
    </select>
    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        INSERT INTO message (from_id, to_id, conversation_id, content, status, create_time)
        VALUES (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateStatus">
        UPDATE message SET status = #{status}
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>